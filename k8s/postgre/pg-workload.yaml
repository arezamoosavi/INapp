apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: "IfNotPresent"
          envFrom:
            - configMapRef:
                name: postgres-config
          ports:
            - containerPort: 5432
              name: postgresql-port
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
          resources: {}
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: testdb
  POSTGRES_USER: user
  POSTGRES_PASSWORD: password
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-svc
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      name: postgresql-port
  clusterIP: None
  selector:
    app: postgres
# apiVersion: v1
# kind: Service
# metadata:
#   name: postgres
#   labels:
#     app: postgres
# spec:
#   ports:
#     - name: postgres
#       port: 5432
#       nodePort: 30432
#   type: NodePort
#   selector:
#     app: postgres
